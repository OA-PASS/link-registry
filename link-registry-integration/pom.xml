<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.dataconservancy.pass.registry</groupId>
    <artifactId>link-registry</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>link-registry-integration</artifactId>

  <profiles>
    <profile>
      <id>standard</id>
      <properties>
        <postgres.port>5432</postgres.port>
        <tomcat.port>8080</tomcat.port>
      </properties>
    </profile>
  </profiles>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>copy</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
          </execution>
          <execution>
            <goals>
              <goal>properties</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <artifactItems>
            <artifactItem>
              <groupId>org.dataconservancy.pass.registry</groupId>
              <artifactId>link-registry-webapp</artifactId>
              <version>${project.version}</version>
              <type>war</type>
              <overWrite>false</overWrite>
              <outputDirectory>${project.build.testOutputDirectory}/docker/webapp</outputDirectory>
              <destFileName>links.war</destFileName>
            </artifactItem>
          </artifactItems>
          <outputDirectory>${project.build.directory}/wars</outputDirectory>
          <overWriteReleases>false</overWriteReleases>
          <overWriteSnapshots>true</overWriteSnapshots>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>reserve-port</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>reserve-network-port</goal>
            </goals>
            <configuration>
              <portNames>
                <portName>postgres.port</portName>
                <portName>tomcat.port</portName>
              </portNames>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <systemPropertyVariables>
            <postgres.port>${postgres.port}</postgres.port>
            <tomcat.port>${tomcat.port}</tomcat.port>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <configuration>
          <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
          <autoPull>true</autoPull>
          <images>

            <image>
              <alias>postgres</alias>
              <name>oapass/it-link-registry-postgres</name>
              <build>
                <dockerFileDir>${project.build.testOutputDirectory}/docker/postgres</dockerFileDir>
              </build>
              <run>
                <namingStrategy>alias</namingStrategy>
                <ports>
                  <port>${postgres.port}:5432</port>
                </ports>
                <network>
                  <mode>custom</mode>
                  <name>pass</name>
                  <alias>postgres</alias>
                </network>
              </run>
            </image>

            <image>
              <alias>link-registry</alias>
              <name>oapass/it-link-registry-webapp</name>
              <build>
                <dockerFileDir>${project.build.testOutputDirectory}/docker/webapp</dockerFileDir>
              </build>
              <run>
                <namingStrategy>alias</namingStrategy>
                <env>
                </env>
                <links>
                  <link>postgres</link>
                </links>

                <network>
                  <mode>custom</mode>
                  <name>pass</name>
                  <alias>link-registry</alias>
                </network>
                <dependsOn>
                  <container>postgres</container>
                </dependsOn>
              </run>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>build-image</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
          <execution>
            <id>start-docker-its</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-docker-its</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
  </build>
</project>
